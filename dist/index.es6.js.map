{"version":3,"file":"index.es6.js","sources":["../src/entity-manager-mongodb.js","../src/index.js"],"sourcesContent":["/*\nEntityManager 类，用于生成一个通用的管理Entity的类。\n */\n/*\neslint-disable no-console\n */\nimport { useCollection } from 'mongo-use-collection'; // eslint-disable-line import/no-unresolved\nimport { MongoClient, GridStore } from 'mongodb';\nimport debug from 'debug';\n\nconst info = debug('entity-manager:info');\nconst error = debug('entity-manager:error');\nexport default class EntityManager {\n  /**\n   * 构造函数\n   * @param  {String} collectionName Entity使用的集合的名称\n   * @param  {String} mongoUrl       所使用的数据库的连接字符串\n   */\n  constructor(mongoUrl, collectionName) {\n    this.collectionName = collectionName;\n    this.mongoUrl = mongoUrl;\n    this.useEntity = cb => useCollection(mongoUrl, collectionName, cb);\n  }\n\n  /**\n   *\n   * 插入实体对象到数据库中\n   * @param  {Object} entityData 实体对象数据\n   * @return {Promise}            操作结果\n   */\n  insert(entityData) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      let result;\n      try {\n        result = await col.insertOne(entityData);\n        resolve(result);\n      } catch (e) {\n        console.log('EntityManager Error: ', e); // eslint-disable-line no-console\n        reject(e);\n      }\n    }));\n  }\n\n/**\n * 查询实体对象\n * @param  {Object} query =             {}  查询条件\n * @param  {Number} limit =             100 查询结果限制\n * @param  {number} skip  =             0   跳过开头的结果\n * @return {Promise}       操作结果\n */\n  find({ query = {}, limit = 100, skip = 0 } = { query: {}, limit: 100, skip: 0 }) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      let result;\n      try {\n        info(`[${col.collectionName}]query::`, query);\n        info('limit:', limit);\n        info('skip:', skip);\n        const cursor = col.find(query).skip(skip).limit(limit);\n        result = await cursor.toArray();\n        info(`[${col.collectionName}]result count::${result.length}`);\n        return resolve(result);\n      } catch (e) {\n        error(e.message, e.stack);\n        return reject(e);\n      }\n    }));\n  }\n\n  count(query = {}) {\n    console.log('[EntityManager count]query::', JSON.stringify(query));\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const result = await col.count(query);\n        console.log('[EntityManager count]result::', result);\n        resolve(result);\n      } catch (e) {\n        console.log('[EntityManager count]Error: ', e); // eslint-disable-line no-console\n        reject(e);\n      }\n    }));\n  }\n\n  findOne(query = {}) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const result = await col.findOne(query);\n        resolve(result);\n      } catch (e) {\n        console.log('[EntityManager findOne]Error: ', e); // eslint-disable-line no-console\n        reject(e);\n      }\n    }));\n  }\n\n  findById(_id) {\n    return this.findOne({ _id });\n  }\n\n  removeById(_id) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const result = await col.remove({ _id }, { single: true });\n        resolve(result);\n      } catch (e) {\n        console.log('[EntityManager removeById]Error: ', e); // eslint-disable-line no-console\n        reject(e);\n      }\n    }));\n  }\n\n  updateById(_id, updateQuery, options) {\n    return this.update({ _id }, updateQuery, options);\n  }\n\n  update(condition, updateQuery, options = {}) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const result = await col.update(condition, updateQuery, options);\n        resolve(result);\n      } catch (error) {\n        reject({\n          error,\n          condition,\n          updateQuery,\n          options,\n        });\n      }\n    }));\n  }\n\n  aggregate(pipeline, options) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const cursor = col.aggregate(pipeline, options);\n        const result = await cursor.toArray();\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    }));\n  }\n\n\n  group(keys, condition, initial, reduce, finalize, command, options) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        // http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#group\n        const result = await col.group(keys, condition, initial,\n          reduce, finalize, command, options);\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    }));\n  }\n\n  mapReduce(map, reduce, options) {\n    return new Promise((resolve, reject) => this.useEntity(async col => {\n      try {\n        const result = await col.mapReduce(map, reduce, options);\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    }));\n  }\n\n  async writeFile(data, fileId, filename, options = null) {\n    try {\n      // 连接数据库\n      const db = await MongoClient.connect(this.mongoUrl);\n\n      // 创建一个新文件用于写入\n      // http://mongodb.github.io/node-mongodb-native/2.2/api/GridStore.html\n      const gs = new GridStore(db, fileId, filename, 'w', options);\n\n      // 打开文件\n      await gs.open();\n\n      // 写入Buffer\n      await gs.write(data);\n\n      // 关闭文件\n      await gs.close();\n\n      await db.close();\n\n      // 返回文件Id\n      return fileId;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async readFile(fileId) {\n    try {\n    // 连接数据库\n      const db = await MongoClient.connect(this.mongoUrl);\n      const file = await GridStore.read(db, fileId);\n      await db.close();\n\n      // 返回文件Buffer\n      return file;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  async removeFile(fileId) {\n    try {\n    // 连接数据库\n      const db = await MongoClient.connect(this.mongoUrl);\n      await GridStore.unlink(db, fileId);\n      await db.close();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n","import EntityManagerMongoDB from './entity-manager-mongodb';\n\n\nconst EntityManager = EntityManagerMongoDB;\n\nexport {\n  EntityManagerMongoDB,\n};\n\nexport default EntityManager;\n"],"names":["info","debug","error","EntityManager","mongoUrl","collectionName","useEntity","useCollection","cb","entityData","resolve","reject","col","insertOne","result","log","query","limit","skip","find","cursor","toArray","length","message","stack","count","findOne","_id","remove","single","updateQuery","options","update","condition","pipeline","aggregate","keys","initial","reduce","finalize","command","group","map","mapReduce","data","fileId","filename","MongoClient","connect","GridStore","db","gs","open","write","close","read","file","unlink","EntityManagerMongoDB"],"mappings":"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"}